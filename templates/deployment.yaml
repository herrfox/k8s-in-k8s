apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-in-k8s.fullname" . }}
  labels:
    {{- include "k8s-in-k8s.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "k8s-in-k8s.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "k8s-in-k8s.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-in-k8s.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /bin/sh
          - -c
          - resources/init-cluster.sh
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 480
            periodSeconds: 60
            timeoutSeconds: 10 
            successThreshold: 1 
            failureThreshold: 3
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 480
            periodSeconds: 60
            timeoutSeconds: 10
            successThreshold: 1 
            failureThreshold: 3
          {{- end }}
          env:
            - name: DIND_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAME
              value: {{ .Release.Name }}
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: workdir
              mountPath: /resources
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: workdir
          configMap:
            name: {{ .Release.Name }}-configmap
            defaultMode: 0755

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
